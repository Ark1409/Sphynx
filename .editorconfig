root = true
# EditorConfig is awesome: http://editorconfig.org

[*.{csproj,props,targets}]
charset = utf-8-bom
end_of_line = crlf
insert_final_newline = true
indent_style = space
indent_size = 4
trim_trailing_whitespace = true

[*.cs]
end_of_line = crlf
insert_final_newline = true
indent_style = space
indent_size = 4
trim_trailing_whitespace = true

# License header
file_header_template = Copyright (c) Ark -Î±- & Specyy. Licensed under the MIT Licence.\nSee the LICENCE file in the repository root for full licence text.

## Roslyn naming styles

# PascalCase for public and protected members
dotnet_naming_style.pascalcase.capitalization = pascal_case
dotnet_naming_symbols.public_members.applicable_accessibilities = public, internal, protected, protected_internal, private_protected
dotnet_naming_symbols.public_members.applicable_kinds = property, method, field, event
dotnet_naming_rule.public_members_pascalcase.severity = warning
dotnet_naming_rule.public_members_pascalcase.symbols = public_members
dotnet_naming_rule.public_members_pascalcase.style = pascalcase

# _camelCase for private fields
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style
dotnet_naming_style.instance_field_style.required_prefix = _

dotnet_naming_symbols.instance_fields.applicable_kinds = field
dotnet_naming_symbols.instance_fields.applicable_accessibilities = private

dotnet_naming_style.instance_field_style.capitalization = camel_case

# PascalCase for other private members
dotnet_naming_symbols.private_members.applicable_accessibilities = private
dotnet_naming_symbols.private_members.applicable_kinds = property, method, event
dotnet_naming_rule.private_members_pascalcase.severity = warning
dotnet_naming_rule.private_members_pascalcase.symbols = private_members
dotnet_naming_rule.private_members_pascalcase.style = pascalcase

dotnet_naming_symbols.local_function.applicable_kinds = local_function
dotnet_naming_rule.local_function_pascalcase.severity = warning
dotnet_naming_rule.local_function_pascalcase.symbols = local_function
dotnet_naming_rule.local_function_pascalcase.style = pascalcase

# ALL_UPPER for constants and public static readonly unsafe fields (probably constants)
dotnet_naming_rule.constants_should_be_all_upper.severity = warning
dotnet_naming_rule.constants_should_be_all_upper.symbols = constants
dotnet_naming_rule.constants_should_be_all_upper.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = all_upper

##Roslyn formating options

#Formatting - indentation options
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

#Formatting - new line options
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

#Formatting - organize using options
dotnet_sort_system_directives_first = true

#Formatting - spacing options
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false

#Formatting - wrapping options
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

##Roslyn language styles

#Style - this. qualification
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

#Style - type names
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning
csharp_style_var_when_type_is_apparent = true:none
csharp_style_var_for_built_in_types = false:warning
csharp_style_var_elsewhere = true:silent

#Style - modifiers
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
csharp_preferred_modifier_order = public, private, protected, internal, new, abstract, virtual, sealed, static, readonly, extern, override, unsafe, volatile, async:warning

#Style - parentheses
# Skipped because roslyn cannot separate +-*/ with << >>

#Style - expression bodies
csharp_style_expression_bodied_accessors = true:warning
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_indexers = true:warning
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_operators = true:warning
csharp_style_expression_bodied_properties = true:warning
csharp_style_expression_bodied_local_functions = true:silent

#Style - expression preferences
dotnet_style_object_initializer = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_compound_assignment = true:warning

#Style - null/type checks
dotnet_style_coalesce_expression = true:warning
dotnet_style_null_propagation = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_throw_expression = true:silent
csharp_style_conditional_delegate_call = true:warning

#Style - unused

dotnet_style_readonly_field = true:silent
dotnet_code_quality_unused_parameters = non_public:silent
csharp_style_unused_value_expression_statement_preference = discard_variable:silent
csharp_style_unused_value_assignment_preference = discard_variable:warning

#Style - variable declaration
csharp_style_inlined_variable_declaration = true:warning
csharp_style_deconstructed_variable_declaration = false:silent

#Style - other C# 7.x features
dotnet_style_prefer_inferred_tuple_names = true:warning
csharp_prefer_simple_default_expression = true:warning
csharp_style_pattern_local_over_anonymous_function = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning

#Style - C# 8 features
csharp_prefer_static_local_function = true:warning
csharp_prefer_simple_using_statement = true:silent
csharp_style_prefer_index_operator = false:silent
csharp_style_prefer_range_operator = false:silent
csharp_style_prefer_switch_expression = false:none

csharp_style_namespace_declarations = block_scoped:warning

#Style - C# 12 features
csharp_style_prefer_primary_constructors = false


## .globalconfig
# .NET Code Style
# IDE styles reference: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/

# IDE0001: Simplify names
dotnet_diagnostic.ide0001.severity = warning

# IDE0002: Simplify member access
dotnet_diagnostic.ide0002.severity = warning

# IDE0003: Remove qualification
dotnet_diagnostic.ide0003.severity = warning

# IDE0004: Remove unnecessary cast
dotnet_diagnostic.ide0004.severity = warning

# IDE0005: Remove unnecessary imports
dotnet_diagnostic.ide0005.severity = warning

# IDE0034: Simplify default literal
dotnet_diagnostic.ide0034.severity = warning

# IDE0036: Sort modifiers
dotnet_diagnostic.ide0036.severity = warning

# IDE0040: Add accessibility modifier
dotnet_diagnostic.ide0040.severity = warning

# IDE0049: Use keyword for type name
dotnet_diagnostic.ide0040.severity = warning

# IDE0055: Fix formatting
dotnet_diagnostic.ide0055.severity = warning

# IDE0051: Private method is unused
dotnet_diagnostic.ide0051.severity = silent

# IDE0052: Private member is unused
dotnet_diagnostic.ide0052.severity = silent

# IDE0073: File header
dotnet_diagnostic.ide0073.severity = warning

# IDE0130: Namespace mismatch with folder
dotnet_diagnostic.ide0130.severity = warning

# IDE1006: Naming style
dotnet_diagnostic.ide1006.severity = warning

# CS1573: No matching documentation for parameter
dotnet_diagnostic.cs1573.severity = suggestion

# CS1591: Missing XML comment for publicly visible type or member
dotnet_diagnostic.cs1591.severity = none

# Resharper: Non-readonly property as hash-code 
resharper_non_readonly_member_in_get_hash_code_highlighting = suggestion

# ReSharper: Virtual member call in constructor
resharper_virtual_member_call_in_constructor_highlighting = suggestion

#Disable operator overloads requiring alternate named methods
dotnet_diagnostic.ca2225.severity = none

# Banned APIs
dotnet_diagnostic.rs0030.severity = error

# ReSharper properties
resharper_keep_existing_declaration_parens_arrangement = false
resharper_keep_existing_embedded_arrangement = true
resharper_place_accessorholder_attribute_on_same_line = false
resharper_place_simple_embedded_statement_on_same_line = false
resharper_wrap_before_declaration_rpar = false
resharper_wrap_before_primary_constructor_declaration_lpar = false
resharper_wrap_switch_expression = chop_if_long

[*.{yaml,yml}]
insert_final_newline = true
indent_style = space
indent_size = 2
trim_trailing_whitespace = true
